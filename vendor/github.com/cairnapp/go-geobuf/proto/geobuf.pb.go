// Code generated by protoc-gen-go. DO NOT EDIT.
// source: geobuf.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	geobuf.proto

It has these top-level messages:
	Data
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Data_Geometry_Type int32

const (
	Data_Geometry_POINT              Data_Geometry_Type = 0
	Data_Geometry_MULTIPOINT         Data_Geometry_Type = 1
	Data_Geometry_LINESTRING         Data_Geometry_Type = 2
	Data_Geometry_MULTILINESTRING    Data_Geometry_Type = 3
	Data_Geometry_POLYGON            Data_Geometry_Type = 4
	Data_Geometry_MULTIPOLYGON       Data_Geometry_Type = 5
	Data_Geometry_GEOMETRYCOLLECTION Data_Geometry_Type = 6
)

var Data_Geometry_Type_name = map[int32]string{
	0: "POINT",
	1: "MULTIPOINT",
	2: "LINESTRING",
	3: "MULTILINESTRING",
	4: "POLYGON",
	5: "MULTIPOLYGON",
	6: "GEOMETRYCOLLECTION",
}
var Data_Geometry_Type_value = map[string]int32{
	"POINT":              0,
	"MULTIPOINT":         1,
	"LINESTRING":         2,
	"MULTILINESTRING":    3,
	"POLYGON":            4,
	"MULTIPOLYGON":       5,
	"GEOMETRYCOLLECTION": 6,
}

func (x Data_Geometry_Type) String() string {
	return proto1.EnumName(Data_Geometry_Type_name, int32(x))
}
func (Data_Geometry_Type) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1, 0} }

type Data struct {
	Keys       []string `protobuf:"bytes,1,rep,name=keys" json:"keys,omitempty"`
	Dimensions uint32   `protobuf:"varint,2,opt,name=dimensions" json:"dimensions,omitempty"`
	Precision  uint32   `protobuf:"varint,3,opt,name=precision" json:"precision,omitempty"`
	// Types that are valid to be assigned to DataType:
	//	*Data_FeatureCollection_
	//	*Data_Feature_
	//	*Data_Geometry_
	DataType isData_DataType `protobuf_oneof:"data_type"`
}

func (m *Data) Reset()                    { *m = Data{} }
func (m *Data) String() string            { return proto1.CompactTextString(m) }
func (*Data) ProtoMessage()               {}
func (*Data) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type isData_DataType interface {
	isData_DataType()
}

type Data_FeatureCollection_ struct {
	FeatureCollection *Data_FeatureCollection `protobuf:"bytes,4,opt,name=feature_collection,json=featureCollection,oneof"`
}
type Data_Feature_ struct {
	Feature *Data_Feature `protobuf:"bytes,5,opt,name=feature,oneof"`
}
type Data_Geometry_ struct {
	Geometry *Data_Geometry `protobuf:"bytes,6,opt,name=geometry,oneof"`
}

func (*Data_FeatureCollection_) isData_DataType() {}
func (*Data_Feature_) isData_DataType()           {}
func (*Data_Geometry_) isData_DataType()          {}

func (m *Data) GetDataType() isData_DataType {
	if m != nil {
		return m.DataType
	}
	return nil
}

func (m *Data) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

func (m *Data) GetDimensions() uint32 {
	if m != nil {
		return m.Dimensions
	}
	return 0
}

func (m *Data) GetPrecision() uint32 {
	if m != nil {
		return m.Precision
	}
	return 0
}

func (m *Data) GetFeatureCollection() *Data_FeatureCollection {
	if x, ok := m.GetDataType().(*Data_FeatureCollection_); ok {
		return x.FeatureCollection
	}
	return nil
}

func (m *Data) GetFeature() *Data_Feature {
	if x, ok := m.GetDataType().(*Data_Feature_); ok {
		return x.Feature
	}
	return nil
}

func (m *Data) GetGeometry() *Data_Geometry {
	if x, ok := m.GetDataType().(*Data_Geometry_); ok {
		return x.Geometry
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Data) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _Data_OneofMarshaler, _Data_OneofUnmarshaler, _Data_OneofSizer, []interface{}{
		(*Data_FeatureCollection_)(nil),
		(*Data_Feature_)(nil),
		(*Data_Geometry_)(nil),
	}
}

func _Data_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*Data)
	// data_type
	switch x := m.DataType.(type) {
	case *Data_FeatureCollection_:
		b.EncodeVarint(4<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.FeatureCollection); err != nil {
			return err
		}
	case *Data_Feature_:
		b.EncodeVarint(5<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Feature); err != nil {
			return err
		}
	case *Data_Geometry_:
		b.EncodeVarint(6<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Geometry); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("Data.DataType has unexpected type %T", x)
	}
	return nil
}

func _Data_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*Data)
	switch tag {
	case 4: // data_type.feature_collection
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(Data_FeatureCollection)
		err := b.DecodeMessage(msg)
		m.DataType = &Data_FeatureCollection_{msg}
		return true, err
	case 5: // data_type.feature
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(Data_Feature)
		err := b.DecodeMessage(msg)
		m.DataType = &Data_Feature_{msg}
		return true, err
	case 6: // data_type.geometry
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(Data_Geometry)
		err := b.DecodeMessage(msg)
		m.DataType = &Data_Geometry_{msg}
		return true, err
	default:
		return false, nil
	}
}

func _Data_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*Data)
	// data_type
	switch x := m.DataType.(type) {
	case *Data_FeatureCollection_:
		s := proto1.Size(x.FeatureCollection)
		n += proto1.SizeVarint(4<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *Data_Feature_:
		s := proto1.Size(x.Feature)
		n += proto1.SizeVarint(5<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *Data_Geometry_:
		s := proto1.Size(x.Geometry)
		n += proto1.SizeVarint(6<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Data_Feature struct {
	Geometry *Data_Geometry `protobuf:"bytes,1,opt,name=geometry" json:"geometry,omitempty"`
	// Types that are valid to be assigned to IdType:
	//	*Data_Feature_Id
	//	*Data_Feature_IntId
	IdType           isData_Feature_IdType `protobuf_oneof:"id_type"`
	Values           []*Data_Value         `protobuf:"bytes,13,rep,name=values" json:"values,omitempty"`
	Properties       []uint32              `protobuf:"varint,14,rep,packed,name=properties" json:"properties,omitempty"`
	CustomProperties []uint32              `protobuf:"varint,15,rep,packed,name=custom_properties,json=customProperties" json:"custom_properties,omitempty"`
}

func (m *Data_Feature) Reset()                    { *m = Data_Feature{} }
func (m *Data_Feature) String() string            { return proto1.CompactTextString(m) }
func (*Data_Feature) ProtoMessage()               {}
func (*Data_Feature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type isData_Feature_IdType interface {
	isData_Feature_IdType()
}

type Data_Feature_Id struct {
	Id string `protobuf:"bytes,11,opt,name=id,oneof"`
}
type Data_Feature_IntId struct {
	IntId int64 `protobuf:"zigzag64,12,opt,name=int_id,json=intId,oneof"`
}

func (*Data_Feature_Id) isData_Feature_IdType()    {}
func (*Data_Feature_IntId) isData_Feature_IdType() {}

func (m *Data_Feature) GetIdType() isData_Feature_IdType {
	if m != nil {
		return m.IdType
	}
	return nil
}

func (m *Data_Feature) GetGeometry() *Data_Geometry {
	if m != nil {
		return m.Geometry
	}
	return nil
}

func (m *Data_Feature) GetId() string {
	if x, ok := m.GetIdType().(*Data_Feature_Id); ok {
		return x.Id
	}
	return ""
}

func (m *Data_Feature) GetIntId() int64 {
	if x, ok := m.GetIdType().(*Data_Feature_IntId); ok {
		return x.IntId
	}
	return 0
}

func (m *Data_Feature) GetValues() []*Data_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Data_Feature) GetProperties() []uint32 {
	if m != nil {
		return m.Properties
	}
	return nil
}

func (m *Data_Feature) GetCustomProperties() []uint32 {
	if m != nil {
		return m.CustomProperties
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Data_Feature) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _Data_Feature_OneofMarshaler, _Data_Feature_OneofUnmarshaler, _Data_Feature_OneofSizer, []interface{}{
		(*Data_Feature_Id)(nil),
		(*Data_Feature_IntId)(nil),
	}
}

func _Data_Feature_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*Data_Feature)
	// id_type
	switch x := m.IdType.(type) {
	case *Data_Feature_Id:
		b.EncodeVarint(11<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.Id)
	case *Data_Feature_IntId:
		b.EncodeVarint(12<<3 | proto1.WireVarint)
		b.EncodeZigzag64(uint64(x.IntId))
	case nil:
	default:
		return fmt.Errorf("Data_Feature.IdType has unexpected type %T", x)
	}
	return nil
}

func _Data_Feature_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*Data_Feature)
	switch tag {
	case 11: // id_type.id
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.IdType = &Data_Feature_Id{x}
		return true, err
	case 12: // id_type.int_id
		if wire != proto1.WireVarint {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeZigzag64()
		m.IdType = &Data_Feature_IntId{int64(x)}
		return true, err
	default:
		return false, nil
	}
}

func _Data_Feature_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*Data_Feature)
	// id_type
	switch x := m.IdType.(type) {
	case *Data_Feature_Id:
		n += proto1.SizeVarint(11<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.Id)))
		n += len(x.Id)
	case *Data_Feature_IntId:
		n += proto1.SizeVarint(12<<3 | proto1.WireVarint)
		n += proto1.SizeVarint(uint64(uint64(x.IntId<<1) ^ uint64((int64(x.IntId) >> 63))))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type Data_Geometry struct {
	Type             Data_Geometry_Type `protobuf:"varint,1,opt,name=type,enum=proto.Data_Geometry_Type" json:"type,omitempty"`
	Lengths          []uint32           `protobuf:"varint,2,rep,packed,name=lengths" json:"lengths,omitempty"`
	Coords           []int64            `protobuf:"zigzag64,3,rep,packed,name=coords" json:"coords,omitempty"`
	Geometries       []*Data_Geometry   `protobuf:"bytes,4,rep,name=geometries" json:"geometries,omitempty"`
	Values           []*Data_Value      `protobuf:"bytes,13,rep,name=values" json:"values,omitempty"`
	CustomProperties []uint32           `protobuf:"varint,15,rep,packed,name=custom_properties,json=customProperties" json:"custom_properties,omitempty"`
}

func (m *Data_Geometry) Reset()                    { *m = Data_Geometry{} }
func (m *Data_Geometry) String() string            { return proto1.CompactTextString(m) }
func (*Data_Geometry) ProtoMessage()               {}
func (*Data_Geometry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *Data_Geometry) GetType() Data_Geometry_Type {
	if m != nil {
		return m.Type
	}
	return Data_Geometry_POINT
}

func (m *Data_Geometry) GetLengths() []uint32 {
	if m != nil {
		return m.Lengths
	}
	return nil
}

func (m *Data_Geometry) GetCoords() []int64 {
	if m != nil {
		return m.Coords
	}
	return nil
}

func (m *Data_Geometry) GetGeometries() []*Data_Geometry {
	if m != nil {
		return m.Geometries
	}
	return nil
}

func (m *Data_Geometry) GetValues() []*Data_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Data_Geometry) GetCustomProperties() []uint32 {
	if m != nil {
		return m.CustomProperties
	}
	return nil
}

type Data_FeatureCollection struct {
	Features         []*Data_Feature `protobuf:"bytes,1,rep,name=features" json:"features,omitempty"`
	Values           []*Data_Value   `protobuf:"bytes,13,rep,name=values" json:"values,omitempty"`
	CustomProperties []uint32        `protobuf:"varint,15,rep,packed,name=custom_properties,json=customProperties" json:"custom_properties,omitempty"`
}

func (m *Data_FeatureCollection) Reset()                    { *m = Data_FeatureCollection{} }
func (m *Data_FeatureCollection) String() string            { return proto1.CompactTextString(m) }
func (*Data_FeatureCollection) ProtoMessage()               {}
func (*Data_FeatureCollection) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *Data_FeatureCollection) GetFeatures() []*Data_Feature {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Data_FeatureCollection) GetValues() []*Data_Value {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *Data_FeatureCollection) GetCustomProperties() []uint32 {
	if m != nil {
		return m.CustomProperties
	}
	return nil
}

type Data_Value struct {
	// Types that are valid to be assigned to ValueType:
	//	*Data_Value_StringValue
	//	*Data_Value_DoubleValue
	//	*Data_Value_PosIntValue
	//	*Data_Value_NegIntValue
	//	*Data_Value_BoolValue
	//	*Data_Value_JsonValue
	ValueType isData_Value_ValueType `protobuf_oneof:"value_type"`
}

func (m *Data_Value) Reset()                    { *m = Data_Value{} }
func (m *Data_Value) String() string            { return proto1.CompactTextString(m) }
func (*Data_Value) ProtoMessage()               {}
func (*Data_Value) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 3} }

type isData_Value_ValueType interface {
	isData_Value_ValueType()
}

type Data_Value_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,oneof"`
}
type Data_Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,2,opt,name=double_value,json=doubleValue,oneof"`
}
type Data_Value_PosIntValue struct {
	PosIntValue uint64 `protobuf:"varint,3,opt,name=pos_int_value,json=posIntValue,oneof"`
}
type Data_Value_NegIntValue struct {
	NegIntValue uint64 `protobuf:"varint,4,opt,name=neg_int_value,json=negIntValue,oneof"`
}
type Data_Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,5,opt,name=bool_value,json=boolValue,oneof"`
}
type Data_Value_JsonValue struct {
	JsonValue string `protobuf:"bytes,6,opt,name=json_value,json=jsonValue,oneof"`
}

func (*Data_Value_StringValue) isData_Value_ValueType() {}
func (*Data_Value_DoubleValue) isData_Value_ValueType() {}
func (*Data_Value_PosIntValue) isData_Value_ValueType() {}
func (*Data_Value_NegIntValue) isData_Value_ValueType() {}
func (*Data_Value_BoolValue) isData_Value_ValueType()   {}
func (*Data_Value_JsonValue) isData_Value_ValueType()   {}

func (m *Data_Value) GetValueType() isData_Value_ValueType {
	if m != nil {
		return m.ValueType
	}
	return nil
}

func (m *Data_Value) GetStringValue() string {
	if x, ok := m.GetValueType().(*Data_Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (m *Data_Value) GetDoubleValue() float64 {
	if x, ok := m.GetValueType().(*Data_Value_DoubleValue); ok {
		return x.DoubleValue
	}
	return 0
}

func (m *Data_Value) GetPosIntValue() uint64 {
	if x, ok := m.GetValueType().(*Data_Value_PosIntValue); ok {
		return x.PosIntValue
	}
	return 0
}

func (m *Data_Value) GetNegIntValue() uint64 {
	if x, ok := m.GetValueType().(*Data_Value_NegIntValue); ok {
		return x.NegIntValue
	}
	return 0
}

func (m *Data_Value) GetBoolValue() bool {
	if x, ok := m.GetValueType().(*Data_Value_BoolValue); ok {
		return x.BoolValue
	}
	return false
}

func (m *Data_Value) GetJsonValue() string {
	if x, ok := m.GetValueType().(*Data_Value_JsonValue); ok {
		return x.JsonValue
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*Data_Value) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _Data_Value_OneofMarshaler, _Data_Value_OneofUnmarshaler, _Data_Value_OneofSizer, []interface{}{
		(*Data_Value_StringValue)(nil),
		(*Data_Value_DoubleValue)(nil),
		(*Data_Value_PosIntValue)(nil),
		(*Data_Value_NegIntValue)(nil),
		(*Data_Value_BoolValue)(nil),
		(*Data_Value_JsonValue)(nil),
	}
}

func _Data_Value_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*Data_Value)
	// value_type
	switch x := m.ValueType.(type) {
	case *Data_Value_StringValue:
		b.EncodeVarint(1<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.StringValue)
	case *Data_Value_DoubleValue:
		b.EncodeVarint(2<<3 | proto1.WireFixed64)
		b.EncodeFixed64(math.Float64bits(x.DoubleValue))
	case *Data_Value_PosIntValue:
		b.EncodeVarint(3<<3 | proto1.WireVarint)
		b.EncodeVarint(uint64(x.PosIntValue))
	case *Data_Value_NegIntValue:
		b.EncodeVarint(4<<3 | proto1.WireVarint)
		b.EncodeVarint(uint64(x.NegIntValue))
	case *Data_Value_BoolValue:
		t := uint64(0)
		if x.BoolValue {
			t = 1
		}
		b.EncodeVarint(5<<3 | proto1.WireVarint)
		b.EncodeVarint(t)
	case *Data_Value_JsonValue:
		b.EncodeVarint(6<<3 | proto1.WireBytes)
		b.EncodeStringBytes(x.JsonValue)
	case nil:
	default:
		return fmt.Errorf("Data_Value.ValueType has unexpected type %T", x)
	}
	return nil
}

func _Data_Value_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*Data_Value)
	switch tag {
	case 1: // value_type.string_value
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ValueType = &Data_Value_StringValue{x}
		return true, err
	case 2: // value_type.double_value
		if wire != proto1.WireFixed64 {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeFixed64()
		m.ValueType = &Data_Value_DoubleValue{math.Float64frombits(x)}
		return true, err
	case 3: // value_type.pos_int_value
		if wire != proto1.WireVarint {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValueType = &Data_Value_PosIntValue{x}
		return true, err
	case 4: // value_type.neg_int_value
		if wire != proto1.WireVarint {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValueType = &Data_Value_NegIntValue{x}
		return true, err
	case 5: // value_type.bool_value
		if wire != proto1.WireVarint {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ValueType = &Data_Value_BoolValue{x != 0}
		return true, err
	case 6: // value_type.json_value
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.ValueType = &Data_Value_JsonValue{x}
		return true, err
	default:
		return false, nil
	}
}

func _Data_Value_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*Data_Value)
	// value_type
	switch x := m.ValueType.(type) {
	case *Data_Value_StringValue:
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.StringValue)))
		n += len(x.StringValue)
	case *Data_Value_DoubleValue:
		n += proto1.SizeVarint(2<<3 | proto1.WireFixed64)
		n += 8
	case *Data_Value_PosIntValue:
		n += proto1.SizeVarint(3<<3 | proto1.WireVarint)
		n += proto1.SizeVarint(uint64(x.PosIntValue))
	case *Data_Value_NegIntValue:
		n += proto1.SizeVarint(4<<3 | proto1.WireVarint)
		n += proto1.SizeVarint(uint64(x.NegIntValue))
	case *Data_Value_BoolValue:
		n += proto1.SizeVarint(5<<3 | proto1.WireVarint)
		n += 1
	case *Data_Value_JsonValue:
		n += proto1.SizeVarint(6<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(len(x.JsonValue)))
		n += len(x.JsonValue)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto1.RegisterType((*Data)(nil), "proto.Data")
	proto1.RegisterType((*Data_Feature)(nil), "proto.Data.Feature")
	proto1.RegisterType((*Data_Geometry)(nil), "proto.Data.Geometry")
	proto1.RegisterType((*Data_FeatureCollection)(nil), "proto.Data.FeatureCollection")
	proto1.RegisterType((*Data_Value)(nil), "proto.Data.Value")
	proto1.RegisterEnum("proto.Data_Geometry_Type", Data_Geometry_Type_name, Data_Geometry_Type_value)
}

func init() { proto1.RegisterFile("geobuf.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 626 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xed, 0xd8, 0x71, 0xe2, 0x49, 0xda, 0x3a, 0x53, 0x54, 0x4c, 0xc4, 0x87, 0x55, 0x38,
	0x18, 0x21, 0x02, 0x0a, 0x3c, 0x41, 0x4b, 0x9a, 0x58, 0x4a, 0x93, 0x6a, 0x09, 0x48, 0x3d, 0x45,
	0x49, 0xbc, 0x0d, 0x86, 0xd4, 0x6b, 0xd9, 0x1b, 0xa4, 0x1c, 0x78, 0x07, 0x1e, 0x80, 0x17, 0xe4,
	0xc0, 0x9d, 0x23, 0xda, 0xf5, 0xc6, 0xb1, 0x50, 0x38, 0xf4, 0xc0, 0xc9, 0x9e, 0xff, 0xfc, 0x66,
	0x76, 0x67, 0x76, 0x76, 0xa1, 0xb9, 0xa4, 0x6c, 0xbe, 0xbe, 0xe9, 0x24, 0x29, 0xe3, 0x0c, 0xab,
	0xf2, 0x73, 0xfa, 0x1d, 0xc0, 0x7c, 0x37, 0xe3, 0x33, 0x44, 0x30, 0xbf, 0xd0, 0x4d, 0xe6, 0xea,
	0x9e, 0xe1, 0xdb, 0x44, 0xfe, 0xe3, 0x63, 0x80, 0x30, 0xba, 0xa5, 0x71, 0x16, 0xb1, 0x38, 0x73,
	0x2b, 0x9e, 0xee, 0x1f, 0x90, 0x92, 0x82, 0x0f, 0xc1, 0x4e, 0x52, 0xba, 0x88, 0x84, 0xe5, 0x1a,
	0xd2, 0xbd, 0x13, 0x70, 0x04, 0x78, 0x43, 0x67, 0x7c, 0x9d, 0xd2, 0xe9, 0x82, 0xad, 0x56, 0x74,
	0xc1, 0x05, 0x66, 0x7a, 0xba, 0xdf, 0xe8, 0x3e, 0xca, 0x77, 0xd1, 0x11, 0x4b, 0x77, 0x2e, 0x72,
	0xea, 0xbc, 0x80, 0x06, 0x1a, 0x69, 0xdd, 0xfc, 0x2d, 0xe2, 0x2b, 0xa8, 0x29, 0xd1, 0xad, 0xca,
	0x24, 0xc7, 0x7b, 0x92, 0x0c, 0x34, 0xb2, 0xa5, 0xb0, 0x0b, 0xf5, 0x25, 0x65, 0xb7, 0x94, 0xa7,
	0x1b, 0xd7, 0x92, 0x11, 0xf7, 0xca, 0x11, 0x7d, 0xe5, 0x1b, 0x68, 0xa4, 0xe0, 0xda, 0x3f, 0x75,
	0xa8, 0xa9, 0x54, 0xf8, 0xba, 0x14, 0xaf, 0xff, 0x3b, 0x7e, 0x17, 0x8d, 0x0e, 0x54, 0xa2, 0xd0,
	0x6d, 0x78, 0xba, 0x6f, 0x0f, 0x34, 0x52, 0x89, 0x42, 0xbc, 0x0f, 0x56, 0x14, 0xf3, 0x69, 0x14,
	0xba, 0x4d, 0x4f, 0xf7, 0x71, 0xa0, 0x91, 0x6a, 0x14, 0xf3, 0x20, 0xc4, 0xe7, 0x60, 0x7d, 0x9d,
	0xad, 0xd6, 0x34, 0x73, 0x0f, 0x3c, 0xc3, 0x6f, 0x74, 0x5b, 0xe5, 0xd4, 0x1f, 0x85, 0x87, 0x28,
	0x40, 0x1c, 0x43, 0x92, 0xb2, 0x84, 0xa6, 0x3c, 0xa2, 0x99, 0x7b, 0xe8, 0x19, 0xe2, 0x18, 0x76,
	0x0a, 0xbe, 0x80, 0xd6, 0x62, 0x9d, 0x71, 0x76, 0x3b, 0x2d, 0x61, 0x47, 0x12, 0x73, 0x72, 0xc7,
	0x55, 0xa1, 0x9f, 0xd9, 0x50, 0x8b, 0xc2, 0x29, 0xdf, 0x24, 0xb4, 0xfd, 0xbb, 0x02, 0xf5, 0x6d,
	0x11, 0xf8, 0x12, 0x4c, 0x21, 0xca, 0x42, 0x0f, 0xbb, 0x0f, 0xf6, 0x15, 0xda, 0x99, 0x6c, 0x12,
	0x4a, 0x24, 0x86, 0x2e, 0xd4, 0x56, 0x34, 0x5e, 0xf2, 0x4f, 0x62, 0x2e, 0xc4, 0x4a, 0x5b, 0x13,
	0x4f, 0xc0, 0x5a, 0x30, 0x96, 0x86, 0x99, 0x6b, 0x78, 0x86, 0x8f, 0x44, 0x59, 0xf8, 0x16, 0x40,
	0xf5, 0x49, 0x6c, 0xcf, 0x94, 0x45, 0xef, 0xef, 0x67, 0x89, 0xbb, 0x4b, 0x9b, 0xee, 0xd2, 0x86,
	0xd3, 0x6f, 0x60, 0x8a, 0x6a, 0xd0, 0x86, 0xea, 0xd5, 0x38, 0x18, 0x4d, 0x1c, 0x0d, 0x0f, 0x01,
	0x2e, 0x3f, 0x0c, 0x27, 0x41, 0x6e, 0xeb, 0xc2, 0x1e, 0x06, 0xa3, 0xde, 0xfb, 0x09, 0x09, 0x46,
	0x7d, 0xa7, 0x82, 0xc7, 0x70, 0x24, 0xfd, 0x25, 0xd1, 0xc0, 0x06, 0xd4, 0xae, 0xc6, 0xc3, 0xeb,
	0xfe, 0x78, 0xe4, 0x98, 0xe8, 0x40, 0x53, 0x65, 0xc8, 0x95, 0x2a, 0x9e, 0x00, 0xf6, 0x7b, 0xe3,
	0xcb, 0xde, 0x84, 0x5c, 0x9f, 0x8f, 0x87, 0xc3, 0xde, 0xf9, 0x24, 0x18, 0x8f, 0x1c, 0xab, 0xfd,
	0x43, 0x87, 0xd6, 0xc5, 0x9e, 0x09, 0xaf, 0xab, 0xd9, 0xcd, 0xef, 0xe1, 0xfe, 0x11, 0x27, 0x05,
	0xf4, 0xbf, 0xba, 0xd3, 0xfe, 0xa5, 0x43, 0x55, 0x86, 0xe3, 0x53, 0x68, 0x66, 0x3c, 0x8d, 0xe2,
	0xe5, 0x54, 0xe6, 0x91, 0xe3, 0x21, 0x66, 0xbb, 0x91, 0xab, 0x05, 0x14, 0xb2, 0xf5, 0x7c, 0x45,
	0x15, 0x24, 0x5e, 0x0a, 0x5d, 0x40, 0xb9, 0x9a, 0x43, 0xcf, 0xe0, 0x20, 0x61, 0xd9, 0x54, 0xdc,
	0x86, 0x9c, 0x12, 0x0f, 0x86, 0x29, 0xa8, 0x84, 0x65, 0x41, 0xcc, 0x0b, 0x2a, 0xa6, 0xcb, 0x12,
	0x65, 0x6e, 0xa9, 0x98, 0x2e, 0x0b, 0xea, 0x09, 0xc0, 0x9c, 0xb1, 0x95, 0x42, 0xc4, 0x6b, 0x50,
	0x1f, 0x68, 0xc4, 0x16, 0x5a, 0x01, 0x7c, 0xce, 0x58, 0xac, 0x00, 0x4b, 0x6d, 0xda, 0x16, 0x9a,
	0x04, 0xce, 0x9a, 0x00, 0xd2, 0x27, 0x6f, 0xc2, 0x59, 0x03, 0xec, 0x70, 0xc6, 0x67, 0xd2, 0x98,
	0x5b, 0xb2, 0x87, 0x6f, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x16, 0xea, 0x09, 0xd3, 0x30, 0x05,
	0x00, 0x00,
}
